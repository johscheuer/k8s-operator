/*
Copyright 2017 The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// This file was automatically generated by lister-gen

package v1

import (
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
	v1 "operator/pkg/api/quobyte.com/v1"
)

// QuobyteServiceLister helps list QuobyteServices.
type QuobyteServiceLister interface {
	// List lists all QuobyteServices in the indexer.
	List(selector labels.Selector) (ret []*v1.QuobyteService, err error)
	// QuobyteServices returns an object that can list and get QuobyteServices.
	QuobyteServices(namespace string) QuobyteServiceNamespaceLister
	QuobyteServiceListerExpansion
}

// quobyteServiceLister implements the QuobyteServiceLister interface.
type quobyteServiceLister struct {
	indexer cache.Indexer
}

// NewQuobyteServiceLister returns a new QuobyteServiceLister.
func NewQuobyteServiceLister(indexer cache.Indexer) QuobyteServiceLister {
	return &quobyteServiceLister{indexer: indexer}
}

// List lists all QuobyteServices in the indexer.
func (s *quobyteServiceLister) List(selector labels.Selector) (ret []*v1.QuobyteService, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.QuobyteService))
	})
	return ret, err
}

// QuobyteServices returns an object that can list and get QuobyteServices.
func (s *quobyteServiceLister) QuobyteServices(namespace string) QuobyteServiceNamespaceLister {
	return quobyteServiceNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// QuobyteServiceNamespaceLister helps list and get QuobyteServices.
type QuobyteServiceNamespaceLister interface {
	// List lists all QuobyteServices in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.QuobyteService, err error)
	// Get retrieves the QuobyteService from the indexer for a given namespace and name.
	Get(name string) (*v1.QuobyteService, error)
	QuobyteServiceNamespaceListerExpansion
}

// quobyteServiceNamespaceLister implements the QuobyteServiceNamespaceLister
// interface.
type quobyteServiceNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all QuobyteServices in the indexer for a given namespace.
func (s quobyteServiceNamespaceLister) List(selector labels.Selector) (ret []*v1.QuobyteService, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.QuobyteService))
	})
	return ret, err
}

// Get retrieves the QuobyteService from the indexer for a given namespace and name.
func (s quobyteServiceNamespaceLister) Get(name string) (*v1.QuobyteService, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("quobyteservice"), name)
	}
	return obj.(*v1.QuobyteService), nil
}
